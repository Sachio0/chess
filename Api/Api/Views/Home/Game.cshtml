@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<head>
    <script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.3.1.min.js"></script>
    <script src="~/chessboardjs-0.3.0/js/chessboard-0.3.0.js"></script>
    <link href="~/chessboardjs-0.3.0/css/chessboard-0.3.0.css" rel="stylesheet" />
    <script src="~/js/chess.min.js"></script>
    <link href="~/css/site.css" rel="stylesheet" />
</head>
<header Class="Title">
    Gra
</header>
<div id="board" style="width: 60%; border: black; border-bottom-width: 10px; margin: auto; padding-top: 5%"></div>
<input type="button" id="toFile" value="Do pliku" Class="buttonDown" />
<input type="button" id="startBtn" value="Reset" Class="buttonDown" />
<label class="buttonDown">
    Kontra PC IA
    <input type="checkbox" id="IA" checked="checked" />
</label>
<label class="buttonDown">
    Ucz się
    <input type="checkbox" id="lern" />
</label>

<input type="button" id="toFileIA" value="Pobierz IA" Class="buttonDown" />
<br />
<label Class="buttonDown">
    <form asp-controller="Home" asp-action="UploadFile" method="post" class="buttonDown" enctype="multipart/form-data" Class="buttonDown">
        <input type="file" name="file" />
        <button type="submit">Wyślij IA</button>
    </form>
</label>
<label Class="buttonDown">
    <input type="file" id="IAFile" accept=".xml" value="Wczytaj" />
    <input type="submit" value="OK" />
</label>
<script>
    var end = false;
    var board,
        game = new Chess(),
        statusEl = $('#status'),
        fenEl = $('#fen'),
        pgnEl = $('#pgn');
    var onDragStart = function ( piece) {
        if (game.game_over() === true ||
            (game.turn() === 'b' && piece.search(/^w/) !== -1)) {
            return false;
        }
    };
    function clickSetPositionBtn() {
        var fileToLoad = event.target.files[0];
        var textFromFileLoaded;
        if (fileToLoad) {
            var reader = new FileReader();
            reader.onload = function (fileLoadedEvent) {
                textFromFileLoaded = fileLoadedEvent.target.result;
                var fenn = textFromFileLoaded;
                game.load(fenn + " w - - 1 45");
                board.position(fenn);
            };
            reader.readAsText(fileToLoad, 'UTF-8');
        }

    }
    function clickGetPositionBtn() {
        var fen = game.fen().split(' ');
        download("chess.txt", fen[0]);
        console.log(fen[0]);
    }
    function TdownloadIA(filename, text) {
        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/xml;charset=utf-8,' + encodeURIComponent(text));
        element.setAttribute('download', filename);

        element.style.display = 'none';
        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);
    }
    function download(filename, text) {
        var element = document.createElement('a');
        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
        element.setAttribute('download', filename);

        element.style.display = 'none';
        document.body.appendChild(element);

        element.click();

        document.body.removeChild(element);
    }
    var makeInter = function () {
        @if(ViewData["Upload"] != null)
        {
            @:alert("@ViewData["Upload"]");
        }
        if ($('#IA').prop("checked")) window.setInterval(makePCMove, 200);
    }
    var makePCMove = function () {
        updateStatus();
        var possibleMoves = game.moves();
        //if ($('#lern').prop("checked")) {
        //    if (possibleMoves.length === 0 || !$('#IA').prop("checked")) return;
        //}
        //else
        if (possibleMoves.length === 0 || game.turn() === 'w' || !$('#IA').prop("checked"))
        return;
        var board2 = {
            Turn: game.turn(),
            Possiotion: game.fen(),
            possibleMoves: game.moves()
        };
        $.ajax({
            type: 'POST',
            url: '/home/Ia',
            dataType: 'json',
            async: false,
            contentType: 'application/json',
            data: JSON.stringify(board2),
            success: function (result) {
                makemovefrom(result);
            }
        });
    }
    function makemovefrom(pos) {
        game.move(pos.split('"').join(""));
        board.position(game.fen());
    }
    var makeRandomMove = function() {
        var possibleMoves = game.moves();

        // game over
        if (possibleMoves.length === 0 || game.turn() === 'w' || !$('#PC').prop("checked"))
            return;

        var randomIndex = Math.floor(Math.random() * possibleMoves.length);
        game.move(possibleMoves[randomIndex]);
        board.position(game.fen());
    };
    function downloadIA() {
        $.ajax(
            {
                type: "GET",
                url: "/home/Download",
                data: "Game1.xml",
                success: function (result) {
                    TdownloadIA("Game1.xml", new XMLSerializer().serializeToString(result.documentElement));
                },
                error: function (req, status, error) {
                    alert("Sorry! We could not receive your feedback at this time.");
                }
            });
    }



    var onDrop = function (source, target) {

        var move = game.move({
            from: source,
            to: target,
            promotion: 'q'
        });

        if (move === null) return 'snapback';

        updateStatus();
    };

    var onSnapEnd = function () {
        board.position(game.fen());
    };

    var updateStatus = function () {
        if (end) return;
        var status = '';


        var moveColor = 'White';
        if (game.turn() === 'b') {
            moveColor = 'Black';
        }

        if (game.in_checkmate() === true) {
            status = 'Przegrał ' + moveColor;
            if ($('#lern').prop("checked")) location.reload();
            alert(status);
            end = true;
        }

        else if (game.in_draw() === true) {
            status = 'Remis';
            if ($('#lern').prop("checked")) location.reload();
            alert(status);
            end = true;
        }

        else {
            status = moveColor + ' to move';
            if (game.in_check() === true) {
                status += ', ' + moveColor + ' is in check';
            }
        }

        statusEl.html(status);
        fenEl.html(game.fen());
        pgnEl.html(game.pgn());
    };

    var cfg = {
        draggable: true,
        position: 'start',
        onDragStart: onDragStart,
        onDrop: onDrop,
        onSnapEnd: onSnapEnd
    };
    board = ChessBoard('board', cfg);

    var pos = "@ViewData["pos"]";



    if (pos != String.null || pos != "") {
        game.load(pos + " w - - 1 45");
        board.position(pos);
    }
    updateStatus();
    $(window).resize(board.resize);
    $('#startBtn').on('click',
        function () {
            end = false;
            game.load("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR" + " w - - 1 45");
            board.start();
            $.ajax({
                type: 'POST',
                url: '/home/Reset',
                dataType: 'json',
                data: "",
                success: function (result) {
                    Console.log(result);
                }
            });
        });
    $('#fromFile').on('change', clickSetPositionBtn);
    $('#toFile').on('click', clickGetPositionBtn);
    $('#toFileIA').on('click', downloadIA);
    $('#IA').on('change', makeInter);
    $(document).ready(makeInter);

</script>
<style>

    .buttonDown {
        background-color: #f0d9b5;
        border: none;
        color: black;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
    }

        .buttonDown:hover {
            background-color: #e0c9a5;
        }

    .Title {
        text-align: center;
        font-style: italic;
        width: 100%;
        /*background-color: #f0d9b5;*/
        font-size: 500%;
        color: black;
        margin: auto;
        position: center;
    }
</style>